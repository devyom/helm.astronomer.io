################################
## Grafana Deployment
#################################
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  name: {{ template "grafana.fullname" . }}
  labels:
    tier: monitoring
    component: grafana
    chart: {{ template "grafana.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: monitoring
      component: grafana
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        tier: monitoring
        component: grafana
        release: {{ .Release.Name }}
    spec:
      nodeSelector:
{{ toYaml (default .Values.global.platformNodePool.nodeSelector .Values.nodeSelector) | indent 8 }}
      affinity:
{{ toYaml (default .Values.global.platformNodePool.affinity .Values.affinity) | indent 8 }}
      tolerations:
{{ toYaml (default .Values.global.platformNodePool.tolerations .Values.tolerations) | indent 8 }}
      restartPolicy: Always
      {{- if and (not .Values.backendSecretName) (not .Values.backendConnection) }}
      serviceAccountName: {{ template "grafana.bootstrapper.serviceaccount" . }}
      initContainers:
        - name: bootstrapper
          image: {{ template "grafana.bootstrapper.image" . }}
          imagePullPolicy: {{ .Values.images.dbBootstrapper.pullPolicy }}
          env:
            - name: BOOTSTRAP_DB
              valueFrom:
                secretKeyRef:
                  name: astronomer-bootstrap
                  key: connection
            - name: DB_NAME
              value: {{ .Release.Name }}-grafana
            - name: SECRET_NAME
              value: {{ template "grafana.backend.secret" . }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: IN_CLUSTER
              value: "true"
      {{- end }}
      containers:
        - name: grafana
          image: {{ template "grafana.image" . }}
          imagePullPolicy: {{ .Values.images.grafana.pullPolicy }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - name: grafana-ui
              containerPort: {{ .Values.ports.http }}
          livenessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.ports.http }}
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: {{ .Values.ports.http }}
            initialDelaySeconds: 10
            periodSeconds: 10
          volumeMounts:
            - name: grafana-datasource-volume
              mountPath: /etc/grafana/provisioning/datasources
          env:
            - name: GF_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ template "grafana.backend.secret" . }}
                  key: connection
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
      volumes:
        - name: grafana-datasource-volume
          configMap:
            name: {{ template "grafana.fullname" . }}-datasource
            items:
              - key: datasource.yaml
                path: datasource.yaml
