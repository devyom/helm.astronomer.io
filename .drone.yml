pipeline:
  lint:
    image: astronomerio/ap-build:0.1.3
    commands:
      - make lint
    when:
      event:
        - push
        - pull_request

  ##################################
  ## Github pushes
  ###################################
  build:
    image: astronomerio/ap-build:0.1.1
    environment:
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
      - ASTRONOMER_VERSION=0.0.0
    commands:
      - (cd charts/airflow ; helm dep update)
      - make build
    when:
      event: push
      branch: [ master, release-* ]

  # deploy:
  #   image: quay.io/ipedrazas/drone-helm
  #   chart: .
  #   release: datarouter-${DRONE_BRANCH}-${DRONE_BUILD_NUMBER}
  #   values: global.baseDomain=$${ASTRO_BASE_DOMAIN},global.tlsSecret=$${ASTRO_TLS_SECRET},astronomer.smtp.uri=$${ASTRO_SMTP},nginx.loadBalancerIP=$${ASTRO_LOADBALANCER_IP}
  #   values_files: configs/master.yaml
  #   skip_tls_verify: true
  #   prefix: DEV
  #   # debug: true
  #   client_only: true
  #   wait: true
  #   namespace: datarouter
  #   secrets: [ dev_api_server, dev_kubernetes_token, astro_smtp, astro_base_domain, astro_tls_secret, astro_loadbalancer_ip]
  #   when:
  #     event: push
  #     branch: [ master, release-* ]

  ##################################
  ## Deployment
  ###################################
  update-version:
    image: astronomerio/ap-build:0.1.1
    commands:
      - make update-image-tags
      - make update-chart-versions
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: [ development, production ]

  commit-push-tags:
    image: astronomerio/ap-build:0.1.1
    commands:
      - mkdir -p /root/.ssh
      - echo "$${GIT_PUSH_SSH_KEY}" > /root/.ssh/id_rsa
      - chmod 600 /root/.ssh/id_rsa
      - ssh-keyscan -H github.com >> /root/.ssh/known_hosts
      - git remote set-url origin git@github.com:${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}.git
      - git config --global user.name "schnie"
      - git config --global user.email "greg@astronomer.io"
      - git add -A
      - git diff-index --quiet HEAD || git commit -m "Bump to $${ASTRONOMER_VERSION}"
      - git push -u origin HEAD:${DRONE_COMMIT_BRANCH}
    secrets: [ git_push_ssh_key ]
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: [ development, production ]

  release:
    image: astronomerio/ap-build:0.1.1
    secrets: [ github_api_key ]
    commands:
      - release $${DRONE_REPO_NAME} $${GITHUB_API_KEY} v$${ASTRONOMER_VERSION} $${DRONE_COMMIT_BRANCH}
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: [ development, production ]

  update-cloud-module:
    image: astronomerio/ap-build:0.1.1
    secrets: [ deploy_key_cloud_module ]
    commands:
      - bin/update-cloud-module
    when:
      event: deployment
      branch: [ master, release-* ]
      environment: [ production ]

  ##################################
  ## Tag
  ###################################
  build:
    image: astronomerio/ap-build:0.1.1
    environment:
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    commands:
      - (cd charts/airflow ; helm dep update)
      - make build
    when:
      event: tag
      branch: [ master, release-* ]

  # Push to helm.astronomer.io
  push:
    image: astronomerio/ap-build:0.1.1
    environment:
      - BUILD_NUMBER=${DRONE_BUILD_NUMBER}
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    commands:
      - printf "%s" $${GCP_TOKEN} > /tmp/gcs_token.json
      - sed -i 's/BEGINPRIVATEKEY/BEGIN PRIVATE KEY/g' /tmp/gcs_token.json
      - sed -i 's/ENDPRIVATEKEY/END PRIVATE KEY/g' /tmp/gcs_token.json
      - gcloud auth activate-service-account --key-file=/tmp/gcs_token.json
      - make push-repo
    secrets: [ gcp_token ]
    when:
      event: tag
      branch: [ master, release-* ]

  notify:
    image: plugins/slack
    secrets: [ slack_webhook ]
    channel: platform
    when:
      status: [ failure ]
